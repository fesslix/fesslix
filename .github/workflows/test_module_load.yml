name: Test loading of the Python module

on:
  workflow_run:
    workflows: ["Build and publish Fesslix as Python module"]
    types:
      - completed
  workflow_dispatch:  # manually trigger workflow
    inputs:
      os:
        description: 'Target OS (leave blank to use default)'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - ubuntu-latest
          - windows-latest
          - macos-14
          - macos-13
          - windows-2025
      python:
        description: 'Python version (leave blank to use default)'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - '3.13'
          - '3.12'

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - id: set
        run: |
          import json
          import os
          import sys
          
          #print("Starting matrix setup...", file=sys.stderr)
          
          # ===================================
          # Load input
          # ===================================
          event = os.environ.get("GITHUB_EVENT_NAME")
          os_input = os.environ.get("INPUT_OS", "")
          python_input = os.environ.get("INPUT_PYTHON", "")
          #print(f"   INPUT: {event} {os_input} {python_input}", file=sys.stderr)

          # ===================================
          # Assemble the matrix
          # ===================================
          if event == "workflow_dispatch" and os_input and python_input:
              matrix = [{"os": os_input, "python": python_input}]
          else:
              matrix = [
                  {"os": "ubuntu-latest", "python": "3.13"},
                  {"os": "windows-latest", "python": "3.13"},
                  {"os": "macos-14", "python": "3.13"},
                  {"os": "macos-13", "python": "3.13"}
              ]
          matrix = [
                  {"os": "ubuntu-latest", "python": "3.13"}
          ]

          # ===================================
          # Write output using environment file
          # ===================================
          print(f"matrix<<EOF")
          print(json.dumps(matrix))
          print("EOF")
        shell: python
        
      - name: Some other step
        run: echo hello

      - name: Debug matrix output
        run: echo "Matrix: $MATRIX"
        env:
          MATRIX: ${{ steps.set.outputs.matrix }}
        
  wait-for-pypi:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      ready: true  # dummy output just to link dependency
    steps:
      - name: Wait for PyPI to synchronize (5 minutes)
        if: ${{ github.event_name == 'workflow_run' }}
        run: sleep 300

  test-module-load:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ${{ matrix.os }}
    needs: [set-matrix, wait-for-pypi]
    strategy:
      matrix: ${{ fromJson(needs.set-matrix.outputs.matrix) }}

    steps:
      - name: Show system info
        run: |
          echo "Running on OS: ${{ matrix.os }}"
          echo "Python version: ${{ matrix.python }}"

      - name: Checkout repository
        uses: actions/checkout@v4  # Get the code from the repository
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Upgrade pip and prepare environment
        run: |
          python -m pip install --upgrade pip

      - name: Install fesslix from PyPI
        run: |
          python -m pip install --no-cache-dir --upgrade fesslix

      - name: Run test script
        run: |
          python test_module_load.py
        working-directory: tests
        
        
