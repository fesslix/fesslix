[build-system]
requires = ["scikit-build-core>=0.10", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "fesslix"
version = "0.1.18"
description = "stochastic analysis"
readme = "README.md"
license = {file = "LICENSE"}
authors = [{ name = "Wolfgang Betz", email = "w.betz@fesslix.org" }]
maintainers = [{ name = "Wolfgang Betz", email = "w.betz@fesslix.org" }]
dependencies = [ "pyyaml" ]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: C++",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
]

[project.urls]
Homepage = "http://fesslix.org"
#Documentation = "https://readthedocs.org"
Repository = "https://github.com/fesslix/fesslix.git"
Issues = "https://github.com/fesslix/fesslix/issues"

[tool.scikit-build]
wheel.expand-macos-universal-tags = true
minimum-version = "build-system.requires"

[tool.cibuildwheel]
build = "cp312-* cp313-*"   # cp39-* cp310-* cp311-* cp312-*
build-verbosity = 1
test-skip = "*-win_arm64"

#################################################################################
# Linux
#################################################################################

[tool.cibuildwheel.linux]
archs = ["auto", "aarch64"]
#manylinux-x86_64-image = "manylinux_2_28"
before-all = [ #"yum install -y gsl-devel",
               "yum install -y curl zip unzip tar wget",
               "yum install -y boost-devel",
               #"yum install -y curl epel-release",
               #"yum install -y curl ninja-build cmake",
               ]
before-build = [ "git clone https://github.com/microsoft/vcpkg.git",
               "cd vcpkg",
               "./bootstrap-vcpkg.sh",
               "./vcpkg install gsl",
               "find ./ -name libgsl*",
               "pwd",
               #"./vcpkg install boost-format boost-math boost-concept-check boost-random",
               #"./vcpkg integrate install",
               #"wget https://archives.boost.io/release/1.87.0/source/boost_1_87_0.tar.gz",
               #"tar -xvzf boost_1_87_0.tar.gz",
               #"cd boost_1_87_0",
               #"./bootstrap.sh",
               #"./b2 install",
               #"pwd",
               #"find ./ -type d -name boost",
               #"find ./ -type f -name 'special_functions.hpp'",
               #"find ./ -type f -name 'BoostConfig.cmake'"
               ]
test-command = "echo 'installed gsl-devel boost-devel'"
environment = "Boost_skip_search=1 VCPKG_ROOT=/project/vcpkg/"

[[tool.cibuildwheel.overrides]]
select ="*-manylinux_x86_64"
inherit.environment="append"
environment = "TRIPLET=x64-linux"

[[tool.cibuildwheel.overrides]]
select ="*-manylinux_i686"
inherit.environment="append"
environment = "TRIPLET=x86-linux"

[[tool.cibuildwheel.overrides]]
select ="*-manylinux_aarch64"
inherit.environment="append"
environment = "TRIPLET=arm64-linux"

[[tool.cibuildwheel.overrides]]
select ="*-musllinux_x86_64"
inherit.environment="append"
environment = "TRIPLET=x64-linux-musl"

[[tool.cibuildwheel.overrides]]
select ="*-musllinux_i686"
inherit.environment="append"
environment = "TRIPLET=x86-linux-musl"

[[tool.cibuildwheel.overrides]]
select ="*-musllinux_aarch64"
inherit.environment="append"
environment = "TRIPLET=arm64-linux-musl"

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = "apk add --no-cache gsl gsl-dev boost-dev"


#################################################################################
# Windows
#################################################################################

[tool.cibuildwheel.windows]
archs = ["auto", "ARM64"]
before-build = "powershell -ExecutionPolicy Bypass -File windows_install_dependencies.ps1 & vcpkg integrate install"

[[tool.cibuildwheel.overrides]]
select ="*-win32*"
inherit.environment="append"
environment = "VCPKG_ROOT=D:/a/fesslix/fesslix/vcpkg CMAKE_TOOLCHAIN_FILE=D:/a/fesslix/fesslix/vcpkg/scripts/buildsystems/vcpkg.cmake PKG_CONFIG_PATH=D:/a/fesslix/fesslix/vcpkg/installed/x86-windows/lib/pkgconfig GSL_INCLUDE_DIR=D:/a/fesslix/fesslix/vcpkg/installed/x86-windows-static/include GSL_LIBRARY=D:/a/fesslix/fesslix/vcpkg/installed/x86-windows-static/lib/gsl.lib GSL_CBLAS_LIBRARY=D:/a/fesslix/fesslix/vcpkg/installed/x86-windows-static/lib/gslcblas.lib Boost_INCLUDE_DIR=D:/a/fesslix/fesslix/vcpkg/installed/x64-windows-static/include Boost_DIR=D:/a/fesslix/fesslix/vcpkg/installed/x64-windows-static/share/boost"

[[tool.cibuildwheel.overrides]]
select ="*-win_amd64*"
inherit.environment="append"
environment = "VCPKG_ROOT=D:/a/fesslix/fesslix/vcpkg CMAKE_TOOLCHAIN_FILE=D:/a/fesslix/fesslix/vcpkg/scripts/buildsystems/vcpkg.cmake PKG_CONFIG_PATH=D:/a/fesslix/fesslix/vcpkg/installed/x64-windows/lib/pkgconfig GSL_INCLUDE_DIR=D:/a/fesslix/fesslix/vcpkg/installed/x64-windows-static/include GSL_LIBRARY=D:/a/fesslix/fesslix/vcpkg/installed/x64-windows-static/lib/gsl.lib GSL_CBLAS_LIBRARY=D:/a/fesslix/fesslix/vcpkg/installed/x64-windows-static/lib/gslcblas.lib Boost_INCLUDE_DIR=D:/a/fesslix/fesslix/vcpkg/installed/x64-windows-static/include Boost_DIR=D:/a/fesslix/fesslix/vcpkg/installed/x64-windows-static/share/boost"

[[tool.cibuildwheel.overrides]]
select ="*-win_arm64*"
inherit.environment="append"
environment = "VCPKG_ROOT=D:/a/fesslix/fesslix/vcpkg CMAKE_TOOLCHAIN_FILE=D:/a/fesslix/fesslix/vcpkg/scripts/buildsystems/vcpkg.cmake PKG_CONFIG_PATH=D:/a/fesslix/fesslix/vcpkg/installed/arm64-windows/lib/pkgconfig GSL_INCLUDE_DIR=D:/a/fesslix/fesslix/vcpkg/installed/arm64-windows-static/include GSL_LIBRARY=D:/a/fesslix/fesslix/vcpkg/installed/arm64-windows-static/lib/gsl.lib GSL_CBLAS_LIBRARY=D:/a/fesslix/fesslix/vcpkg/installed/arm64-windows-static/lib/gslcblas.lib Boost_INCLUDE_DIR=D:/a/fesslix/fesslix/vcpkg/installed/x64-windows-static/include Boost_DIR=D:/a/fesslix/fesslix/vcpkg/installed/x64-windows-static/share/boost"

#################################################################################
# macOS
#################################################################################

[tool.cibuildwheel.macos]
before-all= ["brew install gsl boost",
              "brew --prefix boost"]
#archs = ["x86_64", "arm64"]

[[tool.cibuildwheel.overrides]]
select = "*-macosx_arm64"
inherit.environment="append"
environment = { MACOSX_DEPLOYMENT_TARGET="14.0" }
archs = ["arm64"]

[[tool.cibuildwheel.overrides]]
select = "*-macosx_x86_64"
inherit.environment="append"
environment = { MACOSX_DEPLOYMENT_TARGET="13.0" }
archs = ["x86_64"]
